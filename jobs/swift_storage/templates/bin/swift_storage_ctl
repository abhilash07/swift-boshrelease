#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

log() {
  echo "$(date) ${*}"
}

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/swift_storage/helpers/ctl_setup.sh 'swift_storage'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8

exec >> ${LOG_DIR}/${0##*/}.log
exec 2>&1

# TODO - where are these files now?
OBJECT_RING=/etc/swift/object.ring.gz
ACCOUNT_RING=/etc/swift/account.ring.gz
CONTAINER_RING=/etc/swift/container.ring.gz

case $1 in

  start_object_server)
    log "${0}: setup for swift storage"
    /var/vcap/jobs/swift_storage/bin/setup.sh

    if [ -f ${OBJECT_RING} ]
    then
      log "${0}: start object server "
      service swift-object start
    else
      log "${0}: ${OBJECT_RING} missing, not starting object server"
    fi
    ;;

  start_object_replicator)
    if [ -f ${OBJECT_RING} ]
    then
      log "${0}: start object replicator"
      service swift-object-replicator start
    else
      log "${0}: ${OBJECT_RING} missing, not starting object replicator"
    fi
    ;;

  start_object_updater)
    if [ -f ${OBJECT_RING} ]
    then
      log "${0}: start object updater"
      service swift-object-updater start
    else
      log "${0}: ${OBJECT_RING} missing, not starting object updater"
    fi
    ;;

  start_object_auditor)
    if [ -f ${OBJECT_RING} ]
    then
      log "${0}: start object auditor"
      service swift-object-auditor start
    else
      log "${0}: ${OBJECT_RING} missing, not starting object auditor"
    fi
    ;;

  start_container_server)
    if [ -f ${CONTAINER_RING} ]
    then
      log "${0}: start container server"
      service swift-container start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting container server"
    fi
    ;;

  start_container_replicator)
    if [ -f ${CONTAINER_RING} ]
    then
      log "${0}: start container replicator"
      service swift-container-replicator start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting container replicator"
    fi
    ;;

  start_container_updater)
    if [ -f ${CONTAINER_RING} ]
    then
      log "${0}: start container updater"
      service swift-container-updater start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting container updater"
    fi
    ;;

  start_container_auditor)
    if [ -f ${CONTAINER_RING} ]
    then
      log "${0}: start container auditor"
      service swift-container-auditor start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting container auditor"
    fi
    ;;

  start_account_server)
    if [ -f ${ACCOUNT_RING} ]
    then
      log "${0}: start account server"
      service swift-account start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting account server"
    fi
    ;;

  start_account_replicator)
    if [ -f ${ACCOUNT_RING} ]
    then
      log "${0}: start account replicator"
      service swift-account-replicator start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting account replicator"
    fi
    ;;

  start_account_reaper)
    if [ -f ${ACCOUNT_RING} ]
    then
      log "${0}: start account reaper"
      service swift-account-reaper start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting account reaper"
    fi
    ;;

  start_account_auditor)
    if [ -f ${ACCOUNT_RING} ]
    then
      log "${0}: start account auditor"
      service swift-account-auditor start
    else
      log "${0}: ${CONTAINER_RING} missing, not starting account auditor"
    fi
    ;;

  stop_object_server)
    log "${0}:  stop object server"
    service swift-object stop

    cp /etc/swift/*.gz /var/vcap/store
    cp /etc/swift/*.builder /var/vcap/store
    log "${0}: unmount swift filesystem"
    umount /srv/node/sdb1
    ;;

  stop_object_replicator)
    log "${0}:  stop object replicator"
    service swift-object-replicator stop
    ;;

  stop_object_updater)
    log "${0}:  stop object updater"
    service swift-object-updater stop
    ;;

  stop_object_auditor)
    log "${0}:  stop object auditor"
    service swift-object-auditor stop
    ;;

  stop_container_server)
    log "${0}:  stop container server"
    service swift-container stop
    ;;

  stop_container_replicator)
    log "${0}:  stop container replicator"
    service swift-container-replicator stop
    ;;

  stop_container_updater)
    log "${0}:  stop container updator"
    service swift-container-updater stop
    ;;

  stop_container_auditor)
    log "${0}:  stop container auditor"
    service swift-container-auditor stop
    ;;

  stop_account_server)
    log "${0}:  stop account server"
    service swift-account stop
    ;;

  stop_account_replicator)
    log "${0}:  stop account replicator"
    service swift-account-replicator stop
    ;;

  stop_account_reaper)
    log "${0}:  stop account reaper"
    service swift-account-reaper stop
    ;;

  stop_account_auditor)
    log "${0}:  stop account auditor"
    service swift-account-auditor stop
    ;;

  *)
    log "${0}: Usage: swift_storage_ctl {start|stop}"
    ;;

esac
exit 0
